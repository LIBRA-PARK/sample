plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.practice.sample'
version = '24.12.02'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

ext {
	queryDslVersion = '5.0.0' // QueryDSL 버전 변수 설정
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starter Dependencies
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Jakarta Persistence API
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	// QueryDSL with Jakarta
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// MariaDB Driver
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// Lombok
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Test Dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

sourceSets {
	main {
		java {
			srcDirs += querydslDir
		}
	}
}

tasks.named("compileJava", JavaCompile) {
	destinationDirectory.set(querydslDir)
}

bootJar {
	archiveFileName = 'application.jar'
}

test {
	useJUnitPlatform()
}
